locals {
  default_tags = {
    Name        = "${var.project}-${var.environment}"
    Environment = "${var.environment}"
    Project     = "${var.project}"
  }
}

module "asg" {
  source                                         = "terraform-aws-modules/autoscaling/aws"
  name                                           = "${var.name != "" ? var.name : "${var.project}-${var.environment}-autoscaling_group"}"
  tags                                           = "${var.tags}"
  security_groups                                = "${var.security_groups}"
  asg_name                                       = "${var.asg_name}"
  associate_public_ip_address                    = "${var.associate_public_ip_address}"
  create_asg                                     = "${var.create_asg}"
  create_asg_with_initial_lifecycle_hook         = "${var.create_asg_with_initial_lifecycle_hook}"
  create_lc                                      = "${var.create_lc}"
  default_cooldown                               = "${var.default_cooldown}"
  desired_capacity                               = "${var.desired_capacity}"
  ebs_block_device                               = "${var.ebs_block_device}"
  ebs_optimized                                  = "${var.ebs_optimized}"
  enable_monitoring                              = "${var.enable_monitoring}"
  enabled_metrics                                = "${var.enabled_metrics}"
  ephemeral_block_device                         = "${var.ephemeral_block_device}"
  force_delete                                   = "${var.force_delete}"
  health_check_grace_period                      = "${var.health_check_grace_period}"
  health_check_type                              = "${var.health_check_type}"
  iam_instance_profile                           = "${var.iam_instance_profile}"
  image_id                                       = "${var.image_id}"
  initial_lifecycle_hook_default_result          = "${var.initial_lifecycle_hook_default_result}"
  initial_lifecycle_hook_heartbeat_timeout       = "${var.initial_lifecycle_hook_heartbeat_timeout}"
  initial_lifecycle_hook_lifecycle_transition    = "${var.initial_lifecycle_hook_lifecycle_transition}"
  initial_lifecycle_hook_name                    = "${var.initial_lifecycle_hook_name}"
  initial_lifecycle_hook_notification_metadata   = "${var.initial_lifecycle_hook_notification_metadata}"
  initial_lifecycle_hook_notification_target_arn = "${var.initial_lifecycle_hook_notification_target_arn}"
  initial_lifecycle_hook_role_arn                = "${var.initial_lifecycle_hook_role_arn}"
  instance_type                                  = "${var.instance_type}"
  key_name                                       = "${var.key_name}"
  launch_configuration                           = "${var.launch_configuration}"
  lc_name                                        = "${var.lc_name}"
  load_balancers                                 = "${var.load_balancers}"
  max_size                                       = "${var.max_size}"
  metrics_granularity                            = "${var.metrics_granularity}"
  min_elb_capacity                               = "${var.min_elb_capacity}"
  min_size                                       = "${var.min_size}"
  placement_group                                = "${var.placement_group}"
  placement_tenancy                              = "${var.placement_tenancy}"
  protect_from_scale_in                          = "${var.protect_from_scale_in}"
  recreate_asg_when_lc_changes                   = "${var.recreate_asg_when_lc_changes}"
  root_block_device                              = "${var.root_block_device}"
  spot_price                                     = "${var.spot_price}"
  suspended_processes                            = "${var.suspended_processes}"
  tags_as_map                                    = "${var.tags_as_map}"
  target_group_arns                              = "${var.target_group_arns}"
  termination_policies                           = "${var.termination_policies}"
  user_data                                      = "${var.user_data}"
  vpc_zone_identifier                            = "${var.vpc_zone_identifier}"
  wait_for_capacity_timeout                      = "${var.wait_for_capacity_timeout}"
  wait_for_elb_capacity                          = "${var.wait_for_elb_capacity}"
}

module "AS_Policys" {
  source                     = "AS_policys/"
  autoscaling_group_name     = "${module.asg.this_autoscaling_group_name}"
  policy_name                = "${var.project}-${var.environment}"
  SimpleScaling_policys      = "${var.SimpleScaling_policys}"
  SimpleAlarmScaling_policys = "${var.SimpleAlarmScaling_policys}"
  StepScaling_policys        = "${var.StepScaling_policys}"
  TargetTracking_policys     = "${var.TargetTracking_policys}"
}
